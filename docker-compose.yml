version: "3.8"
services:
  # Spring Boot (Backend)
  spring:
    image: kimkyeongeun/springboot:${IMAGE_TAG}
    container_name: spring
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  fastapi:
    image: kimkyeongeun/fastapi:${IMAGE_TAG}
    container_name: fastapi
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy

  # MySQL (RDB)
  mysql:
    image: mysql:8
    container_name: mysql
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis (Cache)
  redis:
    image: redis:7
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 5s
      retries: 5

  # Nginx (Web Server/Proxy)
  nginx:
    image: nginx:latest  # 공식 Nginx 이미지로 변경
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - spring
      - fastapi


networks:
  default:
    driver: bridge

volumes:
  mysql-data:
  redis-data:
  prometheus_data:
  grafana_data:
  elasticsearch_data:
  filebeat_data: